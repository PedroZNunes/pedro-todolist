{"version":3,"sources":["components/MenuBody.js","components/LeftMenu.js","components/TopBar.js","components/TasksView.js","components/Content.js","components/TaskDialog.js","components/ProjectDialog.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","list","padding","spacing","listStyleType","textAlign","listItem","paddingBottom","listItemIcon","margin","subListItem","marginLeft","width","grow","flexGrow","MenuBody","props","useTheme","classes","projectMenuOptions","title","onClick","e","preventDefault","stopPropagation","handleProjectSubMenuClose","handleAddProjectOpen","selectedProject","handleProjectDelete","React","useState","projectsOpen","setProjectsOpen","projects","filters","text","icon","Inbox","handleProjectFilter","handleDateFilter","Today","moment","endOf","setSelectedProject","anchorEl","setAnchorEl","projectSubMenuOpen","Boolean","id","style","backgroundColor","height","paddingTop","overflow","List","className","map","filter","ListItem","divider","button","IconButton","variant","color","href","ListItemText","primary","Divider","ExpandMore","ExpandLess","Collapse","in","timeout","unmountOnExit","component","disablePadding","project","Icon","name","length","aria-controls","aria-haspopup","size","currentTarget","handleProjectSubMenuClick","MoreHoriz","Add","Menu","keepMounted","open","onClose","PaperProps","option","MenuItem","drawer","breakpoints","up","drawerWidth","flexShrink","drawerPaper","LeftMenu","Hidden","smUp","implementation","Drawer","anchor","direction","isOpen","handleClose","paper","ModalProps","xsDown","Toolbar","appBar","zIndex","menuButton","display","TopBar","AppBar","onOpenMenu","handleAddTaskOpen","inline","paddingRight","inlineProject","marginRight","border","borderRadius","itemContent","addButton","TasksView","selectedTask","setSelectedTask","taskSubMenuOpen","console","log","format","add","getDateToScreen","dateString","out","date","isSameOrAfter","startOf","isSameOrBefore","maxWidth","Typography","align","marginBottom","subheader","ListSubheader","tasks","task","paddingLeft","onTaskDone","Fragment","description","secondary","borderColor","find","projectID","aria-label","handleTaskSubMenuClick","handleTaskDialogOpen","ListItemIcon","handleEditClick","handleDeleteClick","content","minHeight","borderRight","editor","verticalAlign","minWidth","Content","dialog","dialogContent","flexFlow","justifyContent","formControl","dialogActionBar","TaskDialog","setDescription","setProjectID","setID","dueDate","setDueDate","useEffect","handleSubmit","handleClosing","Dialog","aria-labelledby","fullWidth","onSubmit","DialogContent","FormControl","required","TextField","multiline","rowsMax","autoFocus","onFocus","temp_value","target","value","label","placeholder","onChange","nativeEvent","inputType","handleDescriptionUpdate","defaultValue","InputLabel","transform","Select","handleProjectUpdate","toString","type","InputLabelProps","shrink","valueAsDate","handleDateUpdate","onChangeRaw","DialogActions","Button","projectSelect","colorPalette","red","blue","green","yellow","cyan","lime","gray","orange","purple","black","pink","darkblue","ProjectDialog","setName","setColor","handleNameUpdate","palette","onSelect","handleColorUpdate","root","App","menuOpen","setMenuOpen","allTasks","setAllTasks","taskDialogState","setTaskDialogState","outTask","newID","forEach","setTaskToEdit","taskToEdit","addOrUpdateTask","newTask","joined","concat","tempTasks","isEdited","push","allProjects","setAllProjects","projectToEdit","setProjectToEdit","projectDialogState","setProjectDialogState","addOrUpdateProject","newProject","tempProjects","projectIDOnScreen","setProjectIDOnScreen","finalDateOnScreen","setFinalDateOnScreen","tasksOnScreen","setTasksOnScreen","filterTasks","filteredTasks","isAfter","sort","a","b","isBefore","CssBaseline","finalDate","handleProjectEdit","index","indexOf","splice","isDone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12215d2f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport moment from 'moment';\r\n\r\n\r\nimport {\r\n    Inbox as InboxIcon,\r\n    Today as TodayIcon,\r\n    Event as UpcomingIcon,\r\n    FiberManualRecord as ProjectColorIcon,\r\n    ExpandLess as ExpandLessIcon,\r\n    ExpandMore as ExpandMoreIcon,\r\n    Add as AddIcon,\r\n    MoreHoriz as MoreHorizIcon\r\n} from '@material-ui/icons'\r\n\r\nimport {\r\n    List,\r\n    ListItem,\r\n    Divider,\r\n    IconButton,\r\n    Icon,\r\n    ListItemText,\r\n    Collapse, Menu, MenuItem\r\n} from '@material-ui/core'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        padding: theme.spacing(0, 1), listStyleType: \"none\", textAlign: \"left\"\r\n    },\r\n    listItem: {\r\n        paddingBottom: theme.spacing(0)\r\n    },\r\n    listItemIcon: {\r\n        margin: theme.spacing(0, 1, 1, 0)\r\n    },\r\n    subListItem: {\r\n        marginLeft: theme.spacing(4),\r\n        width: 'auto'\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction MenuBody(props) {\r\n\r\n    const theme = useTheme();\r\n\r\n    const classes = useStyles(props);\r\n\r\n    const projectMenuOptions = [\r\n        {\r\n            title: 'Edit',\r\n            onClick: (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                handleProjectSubMenuClose(e);\r\n                props.handleAddProjectOpen(e, selectedProject); }\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            onClick: (e) => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    handleProjectSubMenuClose(e);\r\n                    props.handleProjectDelete(selectedProject); \r\n                }\r\n        }\r\n    ];\r\n\r\n    const [projectsOpen, setProjectsOpen] = React.useState(true);\r\n    const handleProjectsOpen = () => {\r\n        setProjectsOpen(!projectsOpen);\r\n    };\r\n\r\n    const projects = props.projects;\r\n\r\n    const filters = [\r\n        { text: 'Inbox', icon: <InboxIcon />,       onClick: () => { props.handleProjectFilter(null); props.handleDateFilter(null) } },\r\n        { text: 'Today', icon: <TodayIcon />,       onClick: () => { props.handleDateFilter(moment().endOf('day')) } },\r\n        { text: 'This Week', icon: <UpcomingIcon />, onClick: () => { props.handleDateFilter(moment().endOf('week')) } }\r\n    ]\r\n\r\n    const [selectedProject, setSelectedProject] = React.useState({ });\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const projectSubMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleProjectSubMenuClick = (e, project) => {\r\n        e.stopPropagation();\r\n        setAnchorEl(e.currentTarget);\r\n        setSelectedProject(project);\r\n    };\r\n\r\n    const handleProjectSubMenuClose = (e) => {\r\n        e.stopPropagation();\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"list_holder\" style={{ backgroundColor: \"#eee\", height: \"100vh\", paddingTop: theme.spacing(1), overflow: 'auto' }}>\r\n            <List className={classes.list}>\r\n                {filters?.map((filter) => (\r\n                    <ListItem divider={false} button className={classes.listItem} onClick={filter.onClick}>\r\n                        <IconButton\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            href=\"/#\"\r\n                        >\r\n                            {filter.icon}\r\n                        </IconButton>\r\n                        <ListItemText\r\n                            primary={filter.text}\r\n                        />\r\n                        <ListItemText\r\n                            style={{ textAlign: \"right\" }}\r\n                            primary=\"3\"\r\n                        />\r\n                    </ListItem>\r\n\r\n                ))}\r\n\r\n                <Divider style={{ margin: theme.spacing(1, 0) }} />\r\n\r\n                <ListItem button onClick={handleProjectsOpen} className={classes.listItem}>\r\n                    <IconButton variant=\"outlined\" >\r\n                        {projectsOpen ? <ExpandMoreIcon /> : <ExpandLessIcon />}\r\n                    </IconButton>\r\n                    <ListItemText primary=\"Projects\" />\r\n                </ListItem>\r\n\r\n                <Collapse in={projectsOpen} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" className={classes.List} disablePadding>\r\n                        {projects?.map((project) => (\r\n                            <ListItem button className={classes.subListItem} key={project.id} onClick={() => props.handleProjectFilter(project.id)}>\r\n                                <Icon variant=\"outlined\" className={classes.listItemIcon} >\r\n                                    <ProjectColorIcon style={{ color: project.color }} />\r\n                                </Icon>\r\n\r\n                                <ListItemText primary={project.name} />\r\n                                <div className={classes.grow} />\r\n                                {(projects.length > 1) && \r\n                                <IconButton\r\n                                    aria-controls=\"long-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    size='small'\r\n                                    onClick={(e) => handleProjectSubMenuClick(e, project)}\r\n                                >\r\n                                    <MoreHorizIcon />\r\n                                </IconButton>}\r\n                            </ListItem>\r\n\r\n                        ))}\r\n                        <ListItem \r\n                            className={classes.subListItem} \r\n                            style={{paddingTop: theme.spacing(1)}}\r\n                            onClick={(e) => props.handleAddProjectOpen(e, null)}\r\n                            button\r\n                        >\r\n                            <div className={classes.grow} />\r\n\r\n                            <Icon size='small' >\r\n                                <AddIcon />\r\n                            </Icon >\r\n                            <div className={classes.grow} />\r\n\r\n                        </ListItem>\r\n                    </List>\r\n                </Collapse>\r\n\r\n\r\n\r\n            </List>\r\n\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={projectSubMenuOpen}\r\n                onClose={handleProjectSubMenuClose}\r\n                PaperProps={{ width: '20ch' }}\r\n            >\r\n                {projectMenuOptions.map((option) => (\r\n                    <MenuItem key={option} onClick={(e) => option.onClick(e)}>\r\n                        {option.title}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuBody;","import React from 'react';\r\n\r\nimport { makeStyles, useTheme  } from '@material-ui/core/styles';\r\n\r\n\r\nimport {\r\n    Drawer, Hidden, Toolbar,\r\n} from '@material-ui/core';\r\n\r\nimport MenuBody from './MenuBody'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]:{\r\n            width: props => props.drawerWidth,\r\n            flexShrink: 0,\r\n        }\r\n    },\r\n    drawerPaper:{\r\n        width: props => props.drawerWidth,\r\n    },\r\n}));\r\n\r\nfunction LeftMenu(props) {\r\n\r\n    const classes = useStyles(props);\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <nav>\r\n            <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n                variant=\"temporary\"\r\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                open={props.isOpen}\r\n                onClose={props.handleClose}\r\n                classes={{\r\n                paper: classes.drawerPaper,\r\n                }}\r\n                ModalProps={{\r\n                keepMounted: true, // Better open performance on mobile.\r\n                }}\r\n            >\r\n                <MenuBody />\r\n            </Drawer>\r\n            </Hidden>\r\n\r\n            <Hidden xsDown implementation=\"css\">\r\n            <Drawer \r\n                variant=\"permanent\" \r\n                className={classes.drawer}\r\n                classes={{\r\n                paper: classes.drawerPaper\r\n                }}\r\n                open \r\n                onClose={props.handleClose}\r\n            >\r\n                <Toolbar />\r\n                <MenuBody \r\n                    projects={props.projects} \r\n                    handleProjectFilter={props.handleProjectFilter}\r\n                    handleDateFilter={props.handleDateFilter}\r\n                    handleAddProjectOpen={props.handleAddProjectOpen}\r\n                    handleProjectDelete={props.handleProjectDelete}\r\n                />\r\n            </Drawer>\r\n            </Hidden> \r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default LeftMenu;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    AppBar,\r\n    IconButton,\r\n    Toolbar\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n    Menu as MenuIcon,\r\n    Add as AddIcon\r\n} from '@material-ui/icons'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow:{\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\n\r\n\r\nfunction TopBar(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar color=\"primary\" className={classes.appBar}>\r\n            <Toolbar>\r\n            <IconButton onClick={props.onOpenMenu} className={classes.menuButton}>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <div className={classes.grow} />\r\n            <IconButton onClick={() => props.handleAddTaskOpen(null)}>\r\n                <AddIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default TopBar;","import React from 'react';\r\n\r\nimport {\r\n    Typography,\r\n    List,\r\n    ListSubheader,\r\n    ListItem,\r\n    ListItemText,\r\n    IconButton,\r\n    Menu, MenuItem,ListItemIcon\r\n\r\n\r\n} from '@material-ui/core';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport {\r\n    EditOutlined as EditIcon,\r\n    CheckOutlined as CheckIcon,\r\n    Delete as DeleteIcon,\r\n    MoreHoriz as MoreHorizIcon,\r\n    FiberManualRecord as ProjectColorIcon,\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inline: {\r\n        paddingRight: theme.spacing(2)\r\n    },\r\n    inlineProject: {\r\n        marginRight: theme.spacing(2),\r\n        padding: '2px',\r\n        border: \"1px solid\",\r\n        borderRadius: \"3px\"\r\n    },\r\n    itemContent: {\r\n        flexGrow: 3\r\n    },\r\n    addButton: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1)\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nfunction TasksView(props) {\r\n    const theme = useTheme();\r\n    const classes = useStyles(props);\r\n\r\n    const taskMenuOptions = [\r\n        {\r\n            title: 'Edit',\r\n            onClick: (task) => {\r\n                props.handleTaskDialogOpen(task);\r\n                setAnchorEl(null)\r\n            }\r\n        },\r\n        {\r\n            title: 'Delete',\r\n            onClick: (task) => {\r\n                props.onTaskDone(task, false)\r\n                setAnchorEl(null)\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedTask, setSelectedTask] = React.useState({});\r\n    const taskSubMenuOpen = Boolean(anchorEl);\r\n\r\n\r\n    const handleEditClick = (e) => {\r\n        e.stopPropagation();\r\n        props.handleTaskDialogOpen(selectedTask);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDeleteClick = (e) => {\r\n        e.stopPropagation();\r\n        props.onTaskDone(selectedTask, false);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleTaskSubMenuClick = (e, task) => {\r\n        e.stopPropagation();\r\n        setAnchorEl(e.currentTarget);\r\n        setSelectedTask(task);\r\n    };\r\n\r\n    const handleTaskSubMenuClose = (e) => {\r\n        e.stopPropagation();\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    console.log(`today ${moment().endOf('day').format(\"DD-MM-YYYY hh:mm\")}`);\r\n    console.log(`tomorrow ${moment().endOf('day').add(1, 'd').format(\"DD-MM-YYYY hh:mm\")}`);\r\n    console.log(`week ${moment().endOf('day').add(6, 'd').format(\"DD-MM-YYYY hh:mm\")}`);\r\n\r\n    const getDateToScreen = (dateString) => {\r\n        let out = '';\r\n\r\n        if(dateString !== null){\r\n            let date = moment(dateString);\r\n            if (date.isSameOrAfter(moment().startOf('day'))){\r\n                console.log(`date is ${date.format(\"DD-MM-YYYY hh:mm\")}`)\r\n\r\n                if(date.isSameOrBefore(moment().endOf('day'))){\r\n                    out = \"Today\";\r\n                } \r\n                else if (date.isSameOrBefore(moment().endOf('day').add(1, 'd'))) {\r\n                    out = 'Tomorrow';\r\n                }\r\n                else if (date.isSameOrBefore(moment().add(6, 'd'))){\r\n                    out = date.format('dddd');\r\n                } \r\n                else {\r\n                    out = date.format('MMM Do YYYY');\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        return out;\r\n    }\r\n\r\n    return (\r\n        <div className=\"today_view\" style={{\r\n            padding: theme.spacing(0, 7),\r\n            maxWidth: \"800px\",\r\n            margin: \"0 auto\"\r\n        }}\r\n        >\r\n            <header id=\"view_header\">\r\n                <Typography variant=\"h5\" align=\"left\" style={{ padding: theme.spacing(4, 7, 0, 7), marginBottom: theme.spacing(3) }}>Tasks</Typography>\r\n            </header>\r\n\r\n            <div id=\"view_content\">\r\n                <List subheader={\r\n                    <ListSubheader component=\"div\" id=\"list-subheader\">\r\n                        <b>Overview</b>\r\n                    </ListSubheader>}\r\n                >\r\n                    {props.tasks.map((task) => (\r\n                        <ListItem button divider={true} style={{ borderRadius: theme.spacing(1), paddingLeft: theme.spacing(0) }} key={task.id}>\r\n                            <IconButton\r\n                                variant=\"outlined\"\r\n                                onClick={() => props.onTaskDone(task, true)}\r\n                                style={{ margin: theme.spacing(0, 1) }}\r\n                            >\r\n                                <CheckIcon color=\"primary\" />\r\n                            </IconButton>\r\n                            <div className={classes.itemContent}>\r\n                                \r\n                            <ListItemText\r\n                                primary={\r\n                                    <React.Fragment>\r\n\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body1\"\r\n                                        className={classes.inline}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {task.description}\r\n                                    </Typography>\r\n\r\n                                    </React.Fragment>\r\n                                }\r\n                                    \r\n                                secondary={\r\n                                    <React.Fragment>\r\n                                    \r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"caption\"\r\n                                        className={classes.inlineProject}\r\n                                        style={{borderColor:  props.projects.find(project => project.id === task.projectID)?.color}}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {props.projects.find(project => project.id === task.projectID)?.name}\r\n                                    </Typography>\r\n\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"caption\"\r\n                                        className={classes.inline}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {getDateToScreen(task.date)}\r\n                                    </Typography>\r\n\r\n                                    </React.Fragment>\r\n                                }\r\n                            />\r\n                            </div>\r\n                            \r\n                            <IconButton\r\n                                aria-label=\"more\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={(e) => handleTaskSubMenuClick(e, task)}\r\n                            >\r\n                                <MoreHorizIcon />\r\n                            </IconButton>\r\n\r\n                        </ListItem>\r\n\r\n                    ))}\r\n                    {/* add button at the end of the list */}\r\n                    <ListItem button onClick={() => props.handleTaskDialogOpen(null)} >\r\n                        <ListItemIcon className={classes.addButton} >\r\n                            <AddIcon className={classes.grow} color=\"secondary\" />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </List>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={taskSubMenuOpen}\r\n                    onClose={handleTaskSubMenuClose}\r\n                    PaperProps={{ width: '20ch' }}\r\n                >\r\n                    <MenuItem onClick={(e) => handleEditClick(e)}>\r\n                        <Typography color='primary'> Edit </Typography>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={(e) => handleDeleteClick(e)}>\r\n                        <Typography color='secondary'> Delete </Typography>\r\n                    </MenuItem>\r\n                </Menu>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TasksView;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    Toolbar\r\n} from '@material-ui/core';\r\n\r\nimport TasksView from './TasksView'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n    width: props => `calc(100% - ${props.drawerWidth}px)`,\r\n    flexGrow: 1,\r\n    minHeight: '380px', \r\n    backgroundColor: '#fff',\r\n    borderRight: '1px solid #f1f1f1',\r\n  },\r\n  editor:{\r\n    verticalAlign: \"top\",\r\n    paddingBottom: \"84px\",\r\n    minWidth: \"325px\"\r\n  }\r\n}));\r\n\r\nfunction Content(props) {\r\n    const classes = useStyles(props);\r\n    \r\n        return (\r\n        <main className={classes.content}>\r\n            <Toolbar />\r\n            <div id=\"editor\" className={classes.editor}>\r\n                <TasksView projects={props.projects} tasks={props.tasks} handleTaskDialogOpen={props.handleTaskDialogOpen} onTaskDone={props.onTaskDone} />\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Content;","import React, { useState, useEffect } from 'react';\r\n\r\nimport moment from 'moment';\r\n\r\nimport {\r\n  Dialog,\r\n  TextField,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  makeStyles,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,InputLabel\r\n} from '@material-ui/core'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialog:{\r\n    minWidth: 120\r\n  },\r\n  dialogContent: {\r\n    display: 'flex', \r\n    flexFlow:'row wrap', \r\n    justifyContent:'space-between'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3,0,0,0),\r\n    minWidth: 120,\r\n    flexGrow: 1\r\n  },\r\n  dialogActionBar: {\r\n    padding: theme.spacing(3, 3)\r\n  },\r\n  grow: {\r\n    minWidth:theme.spacing(3),\r\n    flexGrow: 1\r\n  },\r\n  description: {\r\n    flexGrow: 1\r\n  },\r\n}))\r\n\r\nfunction TaskDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [description, setDescription]   = useState(props.task.description ?? '');\r\n\r\n  const [projectID, setProjectID]       = useState(props.task.projectID   ?? 0);\r\n\r\n  const [id, setID]                     = useState(props.task.id          ?? null);\r\n\r\n  const [dueDate, setDueDate]           = useState(props.task.date        ?? null);\r\n\r\n  const [formattedDueDate, setFormattedDueDate] = useState(props.task.date        ?? null);\r\n\r\n  const getDateToScreen = () => {\r\n    //let newDate = dueDate.toLocaleDateString('ko-KR', {year: 'numeric', month: '2-digit', day: '2-digit'}).replaceAll('. ', '-').replaceAll('.', '')\r\n    if (dueDate === null){\r\n      return null;\r\n    }\r\n    let newDate = dueDate.format(\"YYYY-MM-DD\");\r\n    return newDate;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDescription(props.task.description ?? '');\r\n    setProjectID(props.task.projectID ?? 0);\r\n    setID(props.task.id         ?? null);\r\n    let date;\r\n    if (props.task.date !== null){\r\n      date = moment(props.task.date).format(\"YYYY-MM-DD\");\r\n    } else {\r\n      date = null\r\n    }\r\n    setDueDate(date  ?? null);\r\n  }, [props.isOpen])\r\n\r\n  // useEffect(() => {\r\n  //   if (dueDate !== null){\r\n\r\n  //     let date = dueDate.format(\"YYYY-MM-DD\");\r\n  //     setFormattedDueDate(date)\r\n  //   }\r\n  //   else {\r\n  //     setFormattedDueDate(null);\r\n  //   }\r\n  // }, [dueDate])\r\n\r\n\r\n  const handleDescriptionUpdate = (e) => {\r\n    if (e.nativeEvent.inputType === 'insertLineBreak') {\r\n      handleSubmit();\r\n      return;\r\n    }\r\n    setDescription(e.target.value);\r\n    console.log(description);\r\n\r\n  }\r\n\r\n  const handleProjectUpdate = (e) => {\r\n    setProjectID(e.target.value);\r\n    console.log(projectID);\r\n\r\n  }\r\n  \r\n  const handleDateUpdate = (e) => {\r\n    // let tempDate  = new Date(e.target.valueAsNumber);\r\n    // let offset    = tempDate.getTimezoneOffset() * 60 * 1000;\r\n    // let newDate   = new Date(e.target.valueAsNumber + offset)\r\n    let value = e.target.value;\r\n    if(e.target.valueAsDate === null){\r\n      setDueDate(null);\r\n      return;\r\n    }\r\n      \r\n    // let tempDate = value + \" +0000\";\r\n    // let date = moment(tempDate, \"YYYY-MM-DD Z\");\r\n    let date = moment(value).endOf('day');\r\n    // date.utc();\r\n    // console.log(date.format(\"YYYY-MM-DD\"));\r\n    setDueDate(date.format(\"YYYY-MM-DD\"));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let out = {\r\n      id: id,\r\n      description: description,\r\n      projectID: projectID,\r\n      date: dueDate\r\n    }\r\n\r\n    props.handleClosing(out);\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog open={props.isOpen} onClose={() => props.handleClosing(null)} aria-labelledby=\"form-dialog-title\" maxWidth=\"xs\" className={classes.dialog} fullWidth >\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogContent >\r\n          <FormControl required className={classes.formControl, classes.description} fullWidth>\r\n            <TextField\r\n              multiline\r\n              rowsMax={4}\r\n              required\r\n              autoFocus\r\n              onFocus={(e) => {\r\n                //getting the carret to last position on first focus\r\n                let temp_value = e.target.value\r\n                e.target.value = ''\r\n                e.target.value = temp_value\r\n              }}\r\n              id=\"task-desc\"\r\n              label=\"Task Description\"\r\n              variant=\"outlined\"\r\n              placeholder={\"what u gon do?\"}\r\n              onChange={e => handleDescriptionUpdate(e)}\r\n              defaultValue={description}\r\n            />\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogContent className={classes.dialogContent}>\r\n          <FormControl required className={classes.formControl} style={{maxWidth: '188px'}}>\r\n            <InputLabel style={{transform: 'translate(14px, -6px) scale(0.75)'}}> Project </InputLabel>\r\n            <Select\r\n              id=\"project\"\r\n              variant=\"outlined\"\r\n              label=\"Project *\"\r\n              value={projectID}\r\n              onChange={e => handleProjectUpdate(e)}\r\n            >\r\n              {// get projects array. update array on app.js? maybe update async\r\n                props.projects.map((project) => (\r\n                  <MenuItem value={project.id}>\r\n                    {project.name.toString()}\r\n                  </MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl required className={classes.formControl} style={{maxWidth: '188px'}}>\r\n            <TextField\r\n              id=\"date\"\r\n              variant=\"outlined\"\r\n              label=\"Due\"\r\n              type=\"date\"\r\n              // className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={dueDate}\r\n              onChange={e => handleDateUpdate(e)}\r\n              onChangeRaw={(e) => e.preventDefault()}\r\n            />\r\n          </FormControl>\r\n\r\n        </DialogContent>\r\n\r\n        <DialogActions className={classes.dialogActionBar}>\r\n          <Button color=\"secondary\" variant=\"contained\" size=\"large\" onClick={() => (props.handleClosing(null))}>\r\n            Cancel\r\n          </Button>\r\n          <div className={classes.grow} />\r\n          <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\" >\r\n            Done\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\nexport default TaskDialog;","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Dialog,\r\n  TextField,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  makeStyles,\r\n  FormControl,\r\n  MenuItem,\r\n  Select\r\n} from '@material-ui/core'\r\n\r\nimport { ColorPalette } from 'material-ui-color';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1, 0, 2, 0),\r\n    minWidth: 120\r\n  },\r\n  dialogActionBar: {\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(1, 3)\r\n  },\r\n  projectSelect: {}\r\n}))\r\n\r\n          \r\n\r\nconst colorPalette = {\r\n  red: '#ff0000',\r\n  blue: '#0000ff',\r\n  green: '#00ff00',\r\n  yellow: 'yellow',\r\n  cyan: 'cyan',\r\n  lime: 'lime',\r\n  gray: 'gray',\r\n  orange: 'orange',\r\n  purple: 'purple',\r\n  black: 'black',\r\n  pink: 'pink',\r\n  darkblue: 'darkblue',\r\n};\r\n\r\nfunction ProjectDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const [color, setColor] = useState('red');\r\n\r\n  const [id, setID] = useState(props.project?.id );\r\n\r\n\r\n  useEffect(() => {\r\n    setID(props.project.id);\r\n    setName(props.project.name);\r\n    setColor(props.project.color);\r\n  }, [props.isOpen])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let out = {\r\n      id: id,\r\n      name: name,\r\n      color: color\r\n    }\r\n\r\n    props.handleClosing(out);\r\n  }\r\n\r\n  const handleNameUpdate = (e) => {\r\n    if (e.nativeEvent.inputType === 'insertLineBreak') {\r\n      handleSubmit();\r\n      return;\r\n    }\r\n    setName(e.target.value);\r\n  }\r\n\r\n  const handleColorUpdate = (e) => {\r\n    setColor(e);\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.isOpen} onClose={() => props.handleClosing(null)} aria-labelledby=\"form-dialog-title\" maxWidth=\"xs\" className={classes.dialog} fullWidth >\r\n      <form onSubmit={handleSubmit} >\r\n        <DialogContent >\r\n          <FormControl required className={classes.formControl} fullWidth >\r\n            <TextField\r\n              required\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"task-desc\"\r\n              label=\"Task Description\"\r\n              variant=\"outlined\"\r\n              placeholder={\"what u gon do?\"}\r\n              onChange={e => handleNameUpdate(e)}\r\n              fullWidth\r\n              defaultValue={name}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl required className={classes.formControl} fullWidth >\r\n            <ColorPalette palette={colorPalette} onSelect={e => handleColorUpdate(e)} />\r\n          </FormControl>\r\n        </DialogContent>\r\n\r\n\r\n        <DialogActions className={classes.dialogActionBar} >\r\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\" >\r\n            Done\r\n          </Button>\r\n          <div className={classes.grow} />\r\n          <Button color=\"secondary\" variant=\"contained\" onClick={() => (props.handleClosing(null))}  >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n\r\n}\r\n\r\nexport default ProjectDialog;","import './App.css';\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  CssBaseline\n} from '@material-ui/core';\n\nimport moment from 'moment';\n\nimport LeftMenu from './components/LeftMenu'\nimport TopBar from './components/TopBar'\nimport Content from './components/Content';\nimport TaskDialog from './components/TaskDialog';\nimport ProjectDialog from './components/ProjectDialog';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n    height: 'fit-content'\n\n  },\n  content: {\n    height: 'fit-content'\n  }\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n\n  //#region menu\n  const [menuOpen, setMenuOpen] = useState(false);\n  const onMenuOpen = () => setMenuOpen(true);\n  const onMenuClose = () => setMenuOpen(false);\n\n\n  //#endregion\n\n  //#region tasks\n  // this will later be changed when I get the backend working\n\n  const [allTasks, setAllTasks] = useState([\n    {\n      id: 0,\n      description: \"Eat\",\n      projectID: 2,\n      date: null\n    },\n    {\n      id: 1,\n      description: \"Sleep\",\n      projectID: 2,\n      date: moment().endOf('day')\n    },\n    {\n      id: 2,\n      description: \"Take the dogs outside\",\n      projectID: 2,\n      date: moment().endOf('day').add(1, 'd')\n    },\n    {\n      id: 3,\n      description: \"Move out\",\n      projectID: 0,\n      date: moment().endOf('day').add(3, 'd')\n    },\n    {\n      id: 4,\n      description: \"Finish the project\",\n      projectID: 1,\n      date: moment().endOf('day').add(5, 'd')\n    },\n    {\n      id: 5,\n      description: \"Get a job\",\n      projectID: 1,\n      date: moment().endOf('day').add(7, 'd')\n    },\n    {\n      id: 6,\n      description: \"Travel to TI\",\n      projectID: 0,\n      date: moment().endOf('day').add(9, 'd')\n    },\n    {\n      id: 7,\n      description: \"Get a decent chair\",\n      projectID: 0,\n      date: moment().endOf('day').add(11, 'd')\n    }\n  ]);\n\n  const [taskDialogState, setTaskDialogState] = useState(false);\n\n\n  const handleTaskDialogOpen = (task) => {\n    let outTask;\n    if (task === null) {\n      console.log('adding new task');\n      let newID = 0;\n      allTasks.forEach((task) => {\n        if (task.id >= newID)\n          newID = task.id + 1;\n      })\n\n      outTask = {\n        id: newID,\n        description: '',\n        projectID: 0,\n        date: null\n      }\n    }\n    else {\n      console.log('editing existing task');\n      outTask = task;\n    }\n    setTaskToEdit(outTask);\n    setTaskDialogState(true);\n  }\n\n  const handleTaskDialogClose = (newTask) => {\n    setTaskDialogState(false);\n    addOrUpdateTask(newTask);\n  }\n\n  const [taskToEdit, setTaskToEdit] = useState({ id: 0, description: null });\n\n  const onTaskDone = (task, isDone) => {\n    (isDone) ?\n      console.log(\"completed task. logging data\") :\n      console.log(\"task deleted. no logging.\");\n\n    let tempTasks = [...allTasks];\n    const index = tempTasks.indexOf(task);\n    if (index > -1) {\n      tempTasks.splice(index, 1);\n    }\n    console.log(tempTasks);\n    console.log(allTasks);\n\n    setAllTasks(tempTasks);\n  }\n\n  const addOrUpdateTask = (newTask) => {\n    if (newTask === null) {\n      console.log(\"no task returned by the task dialog\");\n      return;\n    }\n\n    // add\n    if (newTask.id === null) {\n      newTask.id = allTasks[allTasks.length - 1].id + 1;\n      let joined = allTasks.concat(newTask);\n      setAllTasks(joined);\n      console.log(joined);\n    }\n    // edit\n    else {\n      let tempTasks = [...allTasks];\n\n      let isEdited = false;\n\n      tempTasks.map((task) => {\n        if (task.id === newTask.id) {\n          task.description = newTask.description;\n          task.projectID = newTask.projectID;\n          task.date = newTask.date;\n          isEdited = true;\n        }\n        return tempTasks;\n      })\n\n      if (!isEdited)\n        tempTasks.push(newTask);\n\n      setAllTasks(tempTasks);\n      console.log(tempTasks);\n    }\n\n  }\n  //#endregion\n\n  //#region projects\n  const [allProjects, setAllProjects] = useState([\n    {\n      id: 0,\n      name: 'Alpha',\n      color: 'red'\n    },\n    {\n      id: 1,\n      name: 'Phoenix',\n      color: 'yellow'\n    },\n    {\n      id: 2,\n      name: 'House',\n      color: 'green'\n    }\n  ]);\n\n  const [projectToEdit, setProjectToEdit] = useState({});\n\n  const [projectDialogState, setProjectDialogState] = useState(false);\n\n  const handleProjectDialogOpen = (e, project) => {\n    let newProject = {}\n    if (project === null) {\n      console.log('adding new project');\n      let newID = 0;\n      allProjects.forEach((project) => {\n        if (project.id >= newID)\n          newID = project.id + 1;\n      })\n      newProject = {\n        id: newID,\n        name: '',\n        color: 'red',\n      }\n    }\n    else {\n      console.log('editing existing task');\n      newProject = project;\n    }\n\n    setProjectToEdit(newProject);\n    setProjectDialogState(true);\n  }\n\n  const handleProjectDialogClose = (newProject) => {\n    setProjectDialogState(false);\n    addOrUpdateProject(newProject);\n  }\n\n  const addOrUpdateProject = (newProject) => {\n    if (newProject === null) {\n      console.log(\"no task returned by the task dialog\");\n      return;\n    }\n    //add\n    if (newProject.id === null) {\n      newProject.id = allProjects[allProjects.length - 1].id + 1;\n      let joined = allProjects.concat(newProject);\n      setAllProjects(joined);\n      console.log(joined);\n    }\n    //edit\n    else {\n      let tempProjects = [...allProjects];\n\n      let isEdited = false;\n\n      tempProjects.map((project) => {\n        if (project.id === newProject.id) {\n          project.name = newProject.name;\n          project.color = newProject.color;\n          isEdited = true;\n        }\n        return tempProjects;\n      })\n\n      if (!isEdited)\n        tempProjects.push(newProject);\n\n      setAllProjects(tempProjects);\n      console.log(tempProjects);\n    }\n\n  }\n\n  const handleProjectDelete = (project) => {\n    console.log(\"project deleted.\");\n\n    let tempProjects = [...allProjects];\n    const index = tempProjects.indexOf(project);\n    if (index > -1) {\n      tempProjects.splice(index, 1);\n    }\n    console.log(tempProjects);\n    setAllProjects(tempProjects);\n\n    if (projectIDOnScreen === project.id)\n      setProjectIDOnScreen(null);\n\n    let tempTasks = []\n    allTasks.forEach((task) => {\n      if (task.projectID !== project.id)\n        tempTasks.push(task);\n    })\n\n    console.log(tempTasks);\n    setAllTasks(tempTasks);\n  }\n\n  const handleProjectFilter = (projectID) => {\n    setProjectIDOnScreen(projectID)\n    setFinalDateOnScreen(null)\n  }\n  //#endregion\n\n  //#region dates\n  const handleDateFilter = (finalDate) => {\n    setProjectIDOnScreen(null)\n    setFinalDateOnScreen(finalDate)\n  }\n\n\n  //#endregion\n\n  //#region filter\n  const [projectIDOnScreen, setProjectIDOnScreen] = useState(null);\n  const [finalDateOnScreen, setFinalDateOnScreen] = useState(null);\n\n  const [tasksOnScreen, setTasksOnScreen] = useState(allTasks);\n\n  // update tasks on screen\n  useEffect(() => {\n    filterTasks(projectIDOnScreen, finalDateOnScreen);\n  }, [allProjects, allTasks, projectIDOnScreen, finalDateOnScreen]);\n\n  const filterTasks = (projectID, dueDate) => {\n    console.log(`filtering by project id: ${projectID} and dates prior to: ${dueDate}`);\n    // if (projectID === null) {\n    if (projectID === null && dueDate === null) {\n      setTasksOnScreen(allTasks);\n      return;\n    }\n\n    let filteredTasks = [];\n    allTasks.forEach((task) => {\n      if (task.projectID === projectID || projectID === null) {\n        if (dueDate !== null) {\n          if (task.date === null) {\n            return;\n          }\n\n          if (moment(task.date).isSameOrBefore(dueDate) && moment(task.date).isAfter(moment())) {\n            filteredTasks.push(task);\n          }\n        }\n        else {\n          filteredTasks.push(task);\n        }\n      }\n    })\n\n    if (dueDate !== null) {\n      filteredTasks.sort((a, b) => {\n        if (moment(a.date).isBefore(moment(b.date))) {\n          return -1;\n        } else {\n          return 1;\n        }\n      })\n    }\n    setTasksOnScreen(filteredTasks);\n    console.log(filteredTasks);\n  }\n\n  //#endregion\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TopBar\n        onOpenMenu={onMenuOpen}\n        handleAddTaskOpen={handleTaskDialogOpen}\n      />\n      <LeftMenu\n        isOpen={menuOpen}\n        handleClose={onMenuClose}\n        drawerWidth={drawerWidth}\n        handleProjectFilter={handleProjectFilter}\n        handleDateFilter={handleDateFilter}\n        handleProjectEdit={addOrUpdateProject}\n        handleProjectDelete={handleProjectDelete}\n        handleAddProjectOpen={handleProjectDialogOpen}\n        projects={allProjects}\n      />\n      <Content\n        tasks={tasksOnScreen}\n        handleTaskDialogOpen={handleTaskDialogOpen}\n        onTaskDone={onTaskDone}\n        projects={allProjects}\n        className={classes.content}\n      />\n\n      <TaskDialog\n        isOpen={taskDialogState}\n        handleClosing={handleTaskDialogClose}\n        projects={allProjects}\n        task={taskToEdit}\n      />\n\n      <ProjectDialog\n        isOpen={projectDialogState}\n        handleClosing={handleProjectDialogClose}\n        projects={allProjects}\n        project={projectToEdit}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}